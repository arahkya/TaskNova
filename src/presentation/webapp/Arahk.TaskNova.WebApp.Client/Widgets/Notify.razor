@rendermode InteractiveWebAssembly
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation

<div class="notify-container @_activeClass">
    @message
</div>

@code {
    private string _activeClass = "";

    private HubConnection? hubConnection;

    private string message = "Hello World!";

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(Navigation.ToAbsoluteUri("/notify"))
        @* .WithUrl(Navigation.ToAbsoluteUri("/notify"), options =>
        {
            options.AccessTokenProvider = async () =>
    {
            return await
    Task.FromResult("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30");
        };
        }) *@
        .Build();

        hubConnection.On
        <string, string>("ReceiveMessage", (topic, msg) =>
        {
            message = $"{topic}: {msg}";
            _activeClass = "active";

            InvokeAsync(StateHasChanged);

            Task.Delay(3000).ContinueWith(_ =>
    {
            _activeClass = "";
            InvokeAsync(StateHasChanged);
        });
        });

        await hubConnection.StartAsync();
    }
}